name: Deploy to production & demo

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-zookeeper-production:
    name: Deploy zookeeper
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Auth gcloud CLI for deploy
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.DIGDIR_FDK_PROD_AUTODEPLOY }}

      - name: Get credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: digdir-fdk-prod
          location: europe-north1-a

      - name: Apply Helm template
        run: |
          helm template \
          ./helm-sources/zookeeper-1/ > ./kubectlapply-zookeeper-1.yaml \
          -f ./helm-sources/zookeeper-1/values/prod.yaml 
          chmod o+w ./kubectlapply-zookeeper-1.yaml
          cat kubectlapply-zookeeper-1.yaml

      - name: Deploy to GCP
        run: |
          kubectl apply -f ./kubectlapply-zookeeper-1.yaml --force
          if ! kubectl --namespace=prod rollout status statefulset zookeeper-1; then
            kubectl --namespace=prod rollout undo statefulset zookeeper-1
            kubectl --namespace=prod rollout status statefulset zookeeper-1
            exit 1
          fi

      - name: Notify slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: 'Application: FDK Event Streaming Service - zookeeper-1 | Environment: prod'
          fields: commit,author,workflow
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

  build-and-deploy-production:
    needs: deploy-zookeeper-production
    strategy:
      fail-fast: false
      matrix:
        app: [ kafka-1, kafka-2, kafka-3, schema-registry-1 ]

    name: Deploy ${{ matrix.app }} to prod on merge to main branch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Auth gcloud CLI for deploy
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.DIGDIR_FDK_PROD_AUTODEPLOY }}

      - name: Get credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: digdir-fdk-prod
          location: europe-north1-a

      - name: Apply Helm template
        run: |
          helm template \
          ./helm-sources/${{ matrix.app }}/ > ./kubectlapply-${{ matrix.app }}.yaml \
          -f ./helm-sources/${{ matrix.app }}/values/prod.yaml 
          chmod o+w ./kubectlapply-${{ matrix.app }}.yaml
          cat kubectlapply-${{ matrix.app }}.yaml

      - name: Deploy to GCP
        run: |
          kubectl apply -f ./kubectlapply-${{ matrix.app }}.yaml --force
          kubectl --namespace=prod rollout restart statefulset ${{ matrix.app }}

      - name: Notify slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: 'Application: FDK Event Streaming Service - ${{ matrix.app }} | Environment: prod'
          fields: commit,author,workflow
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

  deploy-zookeeper-demo:
    needs: build-and-deploy-production
    name: Deploy zookeeper
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup gcloud CLI for deploy
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.DIGDIR_FDK_DEV_AUTODEPLOY }}

      - name: Get credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: digdir-fdk-dev
          location: europe-north1-a

      - name: Apply Helm template
        run: |
          helm template \
          ./helm-sources/zookeeper-1/ > ./kubectlapply-zookeeper-1.yaml \
          -f ./helm-sources/zookeeper-1/values/demo.yaml 
          chmod o+w ./kubectlapply-zookeeper-1.yaml
          cat kubectlapply-zookeeper-1.yaml

      - name: Deploy to GCP
        run: |
          kubectl apply -f ./kubectlapply-zookeeper-1.yaml --force
          if ! kubectl --namespace=demo rollout status statefulset zookeeper-1; then
            kubectl --namespace=demo rollout undo statefulset zookeeper-1
            kubectl --namespace=demo rollout status statefulset zookeeper-1
            exit 1
          fi

      - name: Notify slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: 'Application: FDK Event Streaming Service - zookeeper-1 | Environment: demo'
          fields: commit,author,workflow
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

  deploy-to-demo:
    needs: deploy-zookeeper-demo
    strategy:
      fail-fast: false
      matrix:
        app: [ kafka-1, schema-registry-1 ]

    name: Deploy ${{ matrix.app }} to demo if prod-deploy is successful
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Auth gcloud CLI for deploy
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.DIGDIR_FDK_DEV_AUTODEPLOY }}

      - name: Get credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: digdir-fdk-dev
          location: europe-north1-a

      - name: Apply Helm template
        run: |
          helm template \
          ./helm-sources/${{ matrix.app }}/ > ./kubectlapply-${{ matrix.app }}.yaml \
          -f ./helm-sources/${{ matrix.app }}/values/demo.yaml 
          chmod o+w ./kubectlapply-${{ matrix.app }}.yaml
          cat kubectlapply-${{ matrix.app }}.yaml

      - name: Deploy to GCP
        run: |
          kubectl apply -f ./kubectlapply-${{ matrix.app }}.yaml --force
          kubectl --namespace=demo rollout restart statefulset ${{ matrix.app }}

      - name: Notify slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: 'Application: FDK Event Streaming Service - ${{ matrix.app }} | Environment: demo'
          fields: commit,author,workflow
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()